=================================================================================
                   LSE RECRUITEMENT 2016 - MY MEMCHECK
=================================================================================
Level1 - Strace:
       src/level1
       Use of ptrace to track system calls from a traced program
       Prints arguments for execve, fork, vfork, clone, exit,
       exit_group, brk, mmap, munmap, mremap, mprotect
       Catches return code with edi (exit*)
       prints PID and where the error was raised
       Prints other functions names, but no arguments

Level2 - Hooked Strace:
       src/level2
       #include Level1
       - PTRACE_SYSCALL
       + HOOK ON SYSCALLS
       1 line against 700 less effective but hey, WE rule the stuff now

Level3 - Memory tracer:
       src/level3
       #include Level{1,2}
       Hooks on frequently used function that play with memory
       malloc, realloc, free, calloc
       Save each allocated area, to check if we are not out of bound
       Pretty neat

Level4 - Memory checker:
       src/level4
       #include Level{1...3}
       Remove memory access
       Handle segfaults from that
       display memory leaks and invalid accesses from mmap
       display memory leaks from malloc



What works:
     Catch, print, and run child's syscall
     Maintain a map of every allocated memory from the child,
     from mmap and malloc
     Syscalls from loaded libraries too
     Display memory leaks from mmap and malloc (tells if on the heap or not)
     Display invalid accesses from mmap (RW) only
     Handles segfaults too, skip them and continue
     Get instructions sizes (access)


What doesn't:
     Catch access to memory allocated on heap. Addresses are completely
     different from the ones expected. So they are all marked as invalid
     when accessed
     Differentiates reads from writes 100% of the time
     Handle invalid free


Details:
XIP, XAX, and other variables like this were an attempt at preparing for a
*possible* multi-arch compliant program. They translate to rip or eip (in the case
of XIP for example) regarding the machine.

See TODO